# Value in milliseconds for pessimistic locktimeout. 
# This is a hint only.
javax.persistence.lock.timeout = ?

# Value in milliseconds for query timeout. 
# This is a hint only.
javax.persistence.query.timeout = ?

# Groups that are targeted for validation upon the pre-persist event (overrides the default behavior).
javax.persistence.validation.group.pre-persist = ?

#  Groups that are targeted for validation upon the pre-update event (overrides the default behavior). 
javax.persistence.validation.group.pre-update = ?

# Groups that are targeted for validation upon the pre-remove event (overrides the default behavior).
javax.persistence.validation.group.pre-remove = ?

# ----------------------------------------------------------------

# fully qualified name of the driver class
javax.persistence.jdbc.driver = ? 

#  driver-specific URL
javax.persistence.jdbc.url = ?

#  username used by database connection
javax.persistence.jdbc.user = ?

#  password for database connection validation
javax.persistence.jdbc.password = ?

# ----------------------------------------------------------------

# name of a script packaged as part of the persistence application or a string corresponding to a file URL string that designates a script.
javax.persistence.schema-generation.create-script-source = ?

# name of a script packaged as part of the persistence application or a string corresponding to a file URL string that designates a script. 
javax.persistence.schema-generation.drop-script-source = ?

# name of a script packaged as part of the persistence unit or a string corresponding to a file URL string that designates a script.
javax.persistence.sql-load-script-source = ?

# ----------------------------------------------------------------

# The javax.persistence.schema-generation.database.action property
# specifies the action to be taken by the persistence provider with regard to the database artifacts.
# The values for this property are none, create, drop-and-create, drop.
# If this property is not specified, it is assumed that schema generation is not needed or will be initiated by
# other means, and, by default, no schema generation actions will be taken on the database.
# VALUES:
# none
# create
# drop-and-create
# drop
javax.persistence.schema-generation.database.action = ?

# The javax.persistence.schema-generation.scripts.action property specifies
# which scripts are to be generated by the persistence provider. 
# The values for this property are none, create, drop-and-create, drop. 
# A script will only be generated if the script target is specified. 
# If this property is not specified, it is assumed that script generation is not
# needed or will be initiated by other means, and, by default, no scripts will be generated. 
# VALUES:
# none
# create
# drop-and-create
# drop
javax.persistence.schema-generation.scripts.action = ?

# The javax.persistence.schema-generation.create-source property specifies
# whether the creation of database artifacts is to occur on the basis of the object/relational
# mapping metadata, DDL script, or a combination of the two. 
# The values for this property are metadata, script, metadata-then-script, script-then-metadata. 
# If this property is not specified, and a script is specified by 
# the javax.persistence.schema-generation.create-script-source property, 
# the script (only) will be used for schema generation; 
# otherwise if this property is not specified, schema generation will occur on the basis of the object/relational mapping metadata (only). 
# The metadata-then-script and script-then-metadata values specify that 
# a combination of metadata and script is  to be used and the order in which this use is to occur. 
# If either of these values is specified and the resulting database actions are not disjoint, 
# the results are undefined and schema generation may fail.
#VALUES:
# metadata
# script
# metadata-then-script
# script-then-metadata 
javax.persistence.schema-generation.create-source = ?

# The javax.persistence.schema-generation.drop-source property specifies
# whether the dropping of database artifacts is to occur on the basis of the object/relational mapping
# metadata, DDL script, or a combination of the two. 
# The values for this property are metadata, script, metadata-then-script, script-then-metadata. 
# If this property is not specified, and a script is specified by the javax.persistence.schema-generation.drop-script-source property, 
# the script (only) will be used for the dropping of database artifacts; otherwise if this property is not specified, 
# the dropping of database artifacts will occur on the basis of the object/relational mapping metadata (only).
# The metadata-then-script and script-then-metadata values specify that a combination of metadata and
#  script is to be used and the order in which this use is to occur. 
# If either of these values is specified and the resulting database actions are not disjoint,
# the results are undefined and the dropping of database artifacts may fail.
# VALUES:
# metadata,
# script, 
# metadata-then-script, 
# script-then-metadata
javax.persistence.schema-generation.drop-source = ?

# If scripts are to be generated, the target locations for the writing of these scripts must be specified.
# These targets are specified as strings corresponding to file URLs.
javax.persistence.schema-generation.scripts.create-target = ?
javax.persistence.schema-generation.scripts.drop-target = ?

